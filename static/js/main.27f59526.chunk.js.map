{"version":3,"sources":["../../src/index.tsx","App.js","index.js"],"names":["App","useState","url","setUrl","useUrlInput","type","value","onChange","e","target","placeholder","ReactDOM","render","document","getElementById"],"mappings":"oNAmDO,IAAM,E,eAJW,IAAiC,SAAjC,EAAiC,iBAAjC,MAAiC,gBACvD,OAAO,EAAM,OAGc,EA5BF,SAAC,GACxB,MAAI,sBAAsB,KAAK,GACtB,EAAI,QAAQ,kCAAmC,IAEjD,KAEO,SAAC,GACf,GAAI,EAAI,OAAS,EAAG,CAGlB,IAFA,IAAI,GAA2B,EACzB,EAAmB,CAAC,WAAY,WACjB,UAAgB,SAAhB,IAAkB,CAAlC,IAAM,EAAM,KACf,GAAI,EAAI,WAAW,EAAO,UAAU,EAAG,EAAI,SAAU,CACnD,GAA2B,EAC3B,OAGC,IACH,EAAM,EAAiB,GAAK,GAGhC,OAAO,KAwCa,WACtB,EACA,EACA,kBAAgC,GAEhC,qBAAU,WACR,IAAI,EAjCQ,SACd,EACA,kBAAgC,GAGhC,IADA,IAAI,EAAS,EACM,UAAK,SAAL,IAAO,CACxB,GAAS,EADI,MACC,GAEhB,OAAI,IAAW,EACN,KAEF,EAsBQ,CAAgB,EAAK,GACnB,OAAX,GACF,EAAO,KAER,CAAC,ICzFN,IAuBeA,EAvBH,WACV,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAGA,OAFAC,EAAYF,EAAKC,GAGf,6BACE,gDAEA,sCACA,6BACA,2BACEE,KAAK,OACLC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAOL,EAAOK,EAAEC,OAAOH,QACjCI,YAAY,wBAEd,iICdNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.27f59526.chunk.js","sourcesContent":["import { useEffect } from 'react';\n\nvar RULES = {\n    ensureHttps: function (url) {\n        if (url.startsWith(\"http://\")) {\n            return url.replace(\"http://\", \"https://\");\n        }\n        return url;\n    },\n    addProtocolIfEmpty: function (url) {\n        if (url.length === 0) {\n            return \"https://\";\n        }\n        return url;\n    },\n    doesntEndWithSlash: function (url) {\n        if (url.endsWith(\"/\")) {\n            return url.slice(0, -1);\n        }\n        return url;\n    },\n    removeDuplicateProtocol: function (url) {\n        if (/^(https?:\\/\\/){2,}/i.test(url)) {\n            return url.replace(/^(https?:\\/\\/)+(?=https?:\\/\\/)/i, \"\");\n        }\n        return url;\n    },\n    ensureProtocol: function (url) {\n        if (url.length > 0) {\n            var beginsWithPossiblePrefix = false;\n            var possiblePrefixes = [\"https://\", \"http://\"];\n            for (var _i = 0, possiblePrefixes_1 = possiblePrefixes; _i < possiblePrefixes_1.length; _i++) {\n                var prefix = possiblePrefixes_1[_i];\n                if (url.startsWith(prefix.substring(0, url.length))) {\n                    beginsWithPossiblePrefix = true;\n                    break;\n                }\n            }\n            if (!beginsWithPossiblePrefix) {\n                url = possiblePrefixes[0] + url;\n            }\n        }\n        return url;\n    },\n};\nfunction ruleset() {\n    var rules = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        rules[_i] = arguments[_i];\n    }\n    return rules.flat();\n}\nvar DEFAULT_RULES = ruleset(RULES.removeDuplicateProtocol, RULES.ensureProtocol);\nfunction improveUrlInput(url, rules) {\n    if (rules === void 0) { rules = DEFAULT_RULES; }\n    var newUrl = url;\n    for (var _i = 0, rules_1 = rules; _i < rules_1.length; _i++) {\n        var rule = rules_1[_i];\n        newUrl = rule(newUrl);\n    }\n    if (newUrl === url) {\n        return null;\n    }\n    return newUrl;\n}\n/**\n * Effect to improve URL input to be a standard \"https://example.com\" format.\n *\n * Eg.\n * \"example.com\" -> \"https://example.com\"\n * \"example.com/\" -> \"https://example.com/\"\n * \"example.com/path\" -> \"https://example.com/path\"\n * \"https://https://example.com\" -> \"https://example.com\"\n *\n * @param url URL to improve\n * @param setUrl Function to set the URL\n * @returns\n */\nfunction useUrlInput(url, setUrl, rules) {\n    if (rules === void 0) { rules = DEFAULT_RULES; }\n    useEffect(function () {\n        var newUrl = improveUrlInput(url, rules);\n        if (newUrl !== null) {\n            setUrl(newUrl);\n        }\n    }, [url]);\n}\n\nexport { DEFAULT_RULES, RULES, useUrlInput as default, improveUrlInput, ruleset };\n//# sourceMappingURL=index.es.js.map\n","import React, { useState } from \"react\";\n\nimport useUrlInput from \"use-url-input\";\n\nconst App = () => {\n  const [url, setUrl] = useState(\"\");\n  useUrlInput(url, setUrl);\n\n  return (\n    <div>\n      <h1>useUrlInput Demo</h1>\n\n      <label>URL</label>\n      <br />\n      <input\n        type=\"text\"\n        value={url}\n        onChange={(e) => setUrl(e.target.value)}\n        placeholder=\"https://example.com\"\n      />\n      <p>\n        The hook tries to ensure that the input is a URL with HTTP or HTTPS as\n        its protocol as you type.\n      </p>\n    </div>\n  );\n};\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}